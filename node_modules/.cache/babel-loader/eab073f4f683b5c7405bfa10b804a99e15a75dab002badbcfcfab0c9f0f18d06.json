{"ast":null,"code":"// import React, { useState, useContext } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { AuthContext } from '../../pages/auth/Auth';\n// import Footer from '../../components/footer/Footer';\n// import Header from '../../components/header/Header';\n// import { useDarkMode } from '../../pages/darkmode/DarkMode';\n// // import CryptoJS from 'crypto-js';\n// import './login.css';\n\n// const Login = () => {\n//   // const secretPass = 'XkhZG4fW2t2W';\n\n//   const [loginData, setLoginData] = useState({\n//     username: '',\n//     password: '',\n//   });\n\n//   const [isSubmitted, setIsSubmitted] = useState(false);\n\n//   const { login } = useContext(AuthContext); \n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (validateForm()) {\n//       try {\n\n//         //databse connection \n//           const response = await fetch('/api/login', {\n//             method: 'POST',\n//             headers: {\n//               'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify(loginData),\n//           });\n\n//         if(response.ok){\n//           console.log('Logged in:', loginData.username);\n//           login(loginData.username);\n//           setIsSubmitted(true);\n//           setLoginData({\n//             username: '',\n//             password: '',\n//           });\n//           navigate('/'); \n//         }else{\n//           console.log('failed to log in')\n//         }\n\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setLoginData({ ...loginData, [name]: value });\n//   };\n\n//   const validateForm = () => {\n//     const { username, password } = loginData;\n\n//     if (!username.trim() || !password.trim()) {\n//       alert('Username and password are required');\n//       return false;\n//     }\n\n//     return true;\n//   };\n\n//   const { darkMode } = useDarkMode();\n\n//   return (\n//     <div>\n//       <Header/>\n//     <div className={`login ${darkMode ? 'dark-mode' : ''}`}>\n//       <h1>Login</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label htmlFor=\"username\">Username:</label>\n//           <input type=\"text\" name=\"username\" value={loginData.username} onChange={handleChange} required />\n//         </div>\n//         <div>\n//           <label htmlFor=\"password\">Password:</label>\n//           <input type=\"password\" name=\"password\" value={loginData.password} onChange={handleChange} required />\n//         </div>\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       {isSubmitted && (\n//        <div>\n//          <div >\n//             <h3>Login Successful</h3>\n//             <p>You have successfully logged in.</p>\n//             <button onClick={() => setIsSubmitted(false)}>Close</button>\n//           </div>\n//         </div>\n//       )}\n\n//       </div>\n//     <Footer/>\n//     </div>\n//   );\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["C:/Users/aodha/OneDrive/Desktop/react-cw/cw4/src/pages/user/Login.js"],"sourcesContent":["// import React, { useState, useContext } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { AuthContext } from '../../pages/auth/Auth';\r\n// import Footer from '../../components/footer/Footer';\r\n// import Header from '../../components/header/Header';\r\n// import { useDarkMode } from '../../pages/darkmode/DarkMode';\r\n// // import CryptoJS from 'crypto-js';\r\n// import './login.css';\r\n\r\n// const Login = () => {\r\n//   // const secretPass = 'XkhZG4fW2t2W';\r\n\r\n//   const [loginData, setLoginData] = useState({\r\n//     username: '',\r\n//     password: '',\r\n//   });\r\n\r\n//   const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n//   const { login } = useContext(AuthContext); \r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (validateForm()) {\r\n//       try {\r\n\r\n//         //databse connection \r\n//           const response = await fetch('/api/login', {\r\n//             method: 'POST',\r\n//             headers: {\r\n//               'Content-Type': 'application/json',\r\n//             },\r\n//             body: JSON.stringify(loginData),\r\n//           });\r\n          \r\n\r\n//         if(response.ok){\r\n//           console.log('Logged in:', loginData.username);\r\n//           login(loginData.username);\r\n//           setIsSubmitted(true);\r\n//           setLoginData({\r\n//             username: '',\r\n//             password: '',\r\n//           });\r\n//           navigate('/'); \r\n//         }else{\r\n//           console.log('failed to log in')\r\n//         }\r\n       \r\n//       } catch (error) {\r\n//         console.error('Error:', error);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setLoginData({ ...loginData, [name]: value });\r\n//   };\r\n\r\n//   const validateForm = () => {\r\n//     const { username, password } = loginData;\r\n\r\n//     if (!username.trim() || !password.trim()) {\r\n//       alert('Username and password are required');\r\n//       return false;\r\n//     }\r\n\r\n//     return true;\r\n//   };\r\n\r\n//   const { darkMode } = useDarkMode();\r\n\r\n//   return (\r\n//     <div>\r\n//       <Header/>\r\n//     <div className={`login ${darkMode ? 'dark-mode' : ''}`}>\r\n//       <h1>Login</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label htmlFor=\"username\">Username:</label>\r\n//           <input type=\"text\" name=\"username\" value={loginData.username} onChange={handleChange} required />\r\n//         </div>\r\n//         <div>\r\n//           <label htmlFor=\"password\">Password:</label>\r\n//           <input type=\"password\" name=\"password\" value={loginData.password} onChange={handleChange} required />\r\n//         </div>\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//       {isSubmitted && (\r\n//        <div>\r\n//          <div >\r\n//             <h3>Login Successful</h3>\r\n//             <p>You have successfully logged in.</p>\r\n//             <button onClick={() => setIsSubmitted(false)}>Close</button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       </div>\r\n//     <Footer/>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}