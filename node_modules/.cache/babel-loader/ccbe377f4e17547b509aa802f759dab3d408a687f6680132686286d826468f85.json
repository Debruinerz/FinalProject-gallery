{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aodha\\\\OneDrive\\\\Desktop\\\\react-cw\\\\cw4\\\\src\\\\pages\\\\contact\\\\Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from '../../components/header/Header';\nimport Navbar from '../../components/navbar/Navbar';\nimport Footer from '../../components/footer/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [text, setText] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Validate the form fields\n    if (!firstName || !lastName || !email || !text || !phoneNumber) {\n      setErrorMessage('Please fill in all fields');\n      return;\n    }\n    if (firstName.length > 50) {\n      setErrorMessage('First Name exceeds the maximum length');\n      return;\n    }\n    if (lastName.length > 50) {\n      setErrorMessage('Last Name exceeds the maximum length');\n      return;\n    }\n    if (email.length > 100) {\n      setErrorMessage('Email exceeds the maximum length');\n      return;\n    }\n    if (text.length > 3000) {\n      setErrorMessage('Message exceeds the maximum length');\n      return;\n    }\n    if (phoneNumber.length > 11) {\n      setErrorMessage('Phone Number exceeds the maximum length');\n      return;\n    }\n    if (!validateEmail(email)) {\n      setErrorMessage('Please enter a valid email address');\n      return;\n    }\n    if (!validatePhoneNumber(phoneNumber)) {\n      setErrorMessage('Please enter a valid phone number');\n      return;\n    }\n\n    // Clear any previous error message\n    setErrorMessage('');\n\n    // Perform submission or API call here using the form data\n    // You can use fetch or axios to send a POST request to your backend API endpoint\n    // Include the necessary data from the state variables (firstName, lastName, email, text, phoneNumber)\n    // Handle the response or error accordingly\n  };\n\n  const validateEmail = email => {\n    // Basic email validation using a regular expression\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const validatePhoneNumber = phoneNumber => {\n    // Basic phone number validation using a regular expression\n    const phoneNumberRegex = /^\\d{11}$/;\n    return phoneNumberRegex.test(phoneNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contact Us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"firstName\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Last Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"lastName\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text\",\n        children: \"Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phoneNumber\",\n        children: \"Phone Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        id: \"phoneNumber\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"WrkVpnhaor699QSQU7QP7fOVgkM=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","Header","Navbar","Footer","jsxDEV","_jsxDEV","Contact","_s","firstName","setFirstName","lastName","setLastName","email","setEmail","text","setText","phoneNumber","setPhoneNumber","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","length","validateEmail","validatePhoneNumber","emailRegex","test","phoneNumberRegex","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/aodha/OneDrive/Desktop/react-cw/cw4/src/pages/contact/Contact.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Header from '../../components/header/Header';\r\nimport Navbar from '../../components/navbar/Navbar';\r\nimport Footer from '../../components/footer/Footer';\r\n\r\nconst Contact = () => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validate the form fields\r\n    if (!firstName || !lastName || !email || !text || !phoneNumber) {\r\n      setErrorMessage('Please fill in all fields');\r\n      return;\r\n    }\r\n\r\n    if (firstName.length > 50) {\r\n      setErrorMessage('First Name exceeds the maximum length');\r\n      return;\r\n    }\r\n\r\n    if (lastName.length > 50) {\r\n      setErrorMessage('Last Name exceeds the maximum length');\r\n      return;\r\n    }\r\n\r\n    if (email.length > 100) {\r\n      setErrorMessage('Email exceeds the maximum length');\r\n      return;\r\n    }\r\n\r\n    if (text.length > 3000) {\r\n      setErrorMessage('Message exceeds the maximum length');\r\n      return;\r\n    }\r\n\r\n    if (phoneNumber.length > 11) {\r\n      setErrorMessage('Phone Number exceeds the maximum length');\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(email)) {\r\n      setErrorMessage('Please enter a valid email address');\r\n      return;\r\n    }\r\n\r\n    if (!validatePhoneNumber(phoneNumber)) {\r\n      setErrorMessage('Please enter a valid phone number');\r\n      return;\r\n    }\r\n\r\n    // Clear any previous error message\r\n    setErrorMessage('');\r\n\r\n    // Perform submission or API call here using the form data\r\n    // You can use fetch or axios to send a POST request to your backend API endpoint\r\n    // Include the necessary data from the state variables (firstName, lastName, email, text, phoneNumber)\r\n    // Handle the response or error accordingly\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    // Basic email validation using a regular expression\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const validatePhoneNumber = (phoneNumber) => {\r\n    // Basic phone number validation using a regular expression\r\n    const phoneNumberRegex = /^\\d{11}$/;\r\n    return phoneNumberRegex.test(phoneNumber);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Navbar />\r\n      <h2>Contact Us</h2>\r\n\r\n      {errorMessage && <p className=\"error\">{errorMessage}</p>}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"firstName\">First Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"firstName\"\r\n          value={firstName}\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n          required\r\n        />\r\n        <br/>\r\n        <label htmlFor=\"lastName\">Last Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"lastName\"\r\n          value={lastName}\r\n          onChange={(e) => setLastName(e.target.value)}\r\n          required\r\n        />\r\n        <br/>\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        \r\n        <label htmlFor=\"text\">Message:</label>\r\n        <textarea\r\n          id=\"text\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n\r\n        <label htmlFor=\"phoneNumber\">Phone Number:</label>\r\n        <input\r\n          type=\"tel\"\r\n          id=\"phoneNumber\"\r\n          value={phoneNumber}\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}