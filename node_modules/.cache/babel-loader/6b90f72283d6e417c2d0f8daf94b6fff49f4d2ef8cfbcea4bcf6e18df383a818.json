{"ast":null,"code":"const CryptoJS = require('crypto-js');\nconst ENCRYPTION_KEY = 'thisIsMySecretPassphrase';\nconst decrypt = encryptedData => {\n  try {\n    if (!encryptedData) {\n      console.error('Encrypted data is empty');\n      return null;\n    }\n\n    // Split the IV and encrypted data from the combined string\n    const [ivHex, encryptedHex] = encryptedData.split(':');\n    const iv = CryptoJS.enc.Hex.parse(ivHex);\n    const encrypted = CryptoJS.enc.Hex.parse(encryptedHex);\n\n    // Decrypt using the extracted IV and the encryption key\n    const decryptedData = CryptoJS.AES.decrypt({\n      ciphertext: encrypted\n    }, ENCRYPTION_KEY, {\n      iv: iv\n    }).toString(CryptoJS.enc.Utf8);\n    return decryptedData;\n  } catch (error) {\n    console.error('Error decrypting data:', error);\n    return null;\n  }\n};\nexport default decrypt;","map":{"version":3,"names":["CryptoJS","require","ENCRYPTION_KEY","decrypt","encryptedData","console","error","ivHex","encryptedHex","split","iv","enc","Hex","parse","encrypted","decryptedData","AES","ciphertext","toString","Utf8"],"sources":["C:/Users/aodha/OneDrive/Desktop/react-cw/cw4/src/components/crypto-browser/decrypt.js"],"sourcesContent":["const CryptoJS = require('crypto-js');\r\n\r\nconst ENCRYPTION_KEY = 'thisIsMySecretPassphrase';\r\n\r\nconst decrypt = (encryptedData) => {\r\n  try {\r\n    if (!encryptedData) {\r\n      console.error('Encrypted data is empty');\r\n      return null;\r\n    }\r\n\r\n    // Split the IV and encrypted data from the combined string\r\n    const [ivHex, encryptedHex] = encryptedData.split(':');\r\n    const iv = CryptoJS.enc.Hex.parse(ivHex);\r\n    const encrypted = CryptoJS.enc.Hex.parse(encryptedHex);\r\n\r\n    // Decrypt using the extracted IV and the encryption key\r\n    const decryptedData = CryptoJS.AES.decrypt({ ciphertext: encrypted }, ENCRYPTION_KEY, { iv: iv }).toString(CryptoJS.enc.Utf8);\r\n    return decryptedData;\r\n  } catch (error) {\r\n    console.error('Error decrypting data:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default decrypt;"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;AAErC,MAAMC,cAAc,GAAG,0BAA0B;AAEjD,MAAMC,OAAO,GAAIC,aAAa,IAAK;EACjC,IAAI;IACF,IAAI,CAACA,aAAa,EAAE;MAClBC,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAC;MACxC,OAAO,IAAI;IACb;;IAEA;IACA,MAAM,CAACC,KAAK,EAAEC,YAAY,CAAC,GAAGJ,aAAa,CAACK,KAAK,CAAC,GAAG,CAAC;IACtD,MAAMC,EAAE,GAAGV,QAAQ,CAACW,GAAG,CAACC,GAAG,CAACC,KAAK,CAACN,KAAK,CAAC;IACxC,MAAMO,SAAS,GAAGd,QAAQ,CAACW,GAAG,CAACC,GAAG,CAACC,KAAK,CAACL,YAAY,CAAC;;IAEtD;IACA,MAAMO,aAAa,GAAGf,QAAQ,CAACgB,GAAG,CAACb,OAAO,CAAC;MAAEc,UAAU,EAAEH;IAAU,CAAC,EAAEZ,cAAc,EAAE;MAAEQ,EAAE,EAAEA;IAAG,CAAC,CAAC,CAACQ,QAAQ,CAAClB,QAAQ,CAACW,GAAG,CAACQ,IAAI,CAAC;IAC7H,OAAOJ,aAAa;EACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,IAAI;EACb;AACF,CAAC;AAED,eAAeH,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}