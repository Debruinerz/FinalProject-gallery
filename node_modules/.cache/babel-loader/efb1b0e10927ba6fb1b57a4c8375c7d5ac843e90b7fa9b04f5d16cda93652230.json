{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aodha\\\\OneDrive\\\\Desktop\\\\react-cw\\\\cw4\\\\src\\\\components\\\\fontSizeChanger\\\\FontSizeChanger.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FontChanger = _ref => {\n  _s();\n  let {\n    initialFontSize,\n    targetSelector\n  } = _ref;\n  const [fontSize, setFontSize] = useState(initialFontSize);\n  const [fontFamily, setFontFamily] = useState('sans-serif');\n  const increaseFontSize = () => {\n    const targetElements = document.querySelectorAll(targetSelector);\n    targetElements.forEach(element => {\n      element.style.fontSize = `${fontSize + 2}px`;\n    });\n    setFontSize(fontSize + 2);\n  };\n  const decreaseFontSize = () => {\n    const targetElements = document.querySelectorAll(targetSelector);\n    targetElements.forEach(element => {\n      element.style.fontSize = `${fontSize - 2}px`;\n    });\n    setFontSize(fontSize - 2);\n  };\n  const changeFontFamily = event => {\n    const newFontFamily = event.target.value;\n    const targetElements = document.querySelectorAll(targetSelector);\n    targetElements.forEach(element => {\n      element.style.fontFamily = newFontFamily;\n    });\n    setFontFamily(newFontFamily);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increaseFontSize,\n      children: \"+ Font Size\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decreaseFontSize,\n      children: \"- Font Size\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: fontFamily,\n      onChange: changeFontFamily,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"sans-serif\",\n        children: \"Sans-serif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"serif\",\n        children: \"Serif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"monospace\",\n        children: \"Monospace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"cursive\",\n        children: \"Cursive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"fantasy\",\n        children: \"Fantasy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FontChanger, \"MqdxWv96aThwG1GzC8B4902EBFg=\");\n_c = FontChanger;\nexport default FontChanger;\nvar _c;\n$RefreshReg$(_c, \"FontChanger\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FontChanger","_ref","_s","initialFontSize","targetSelector","fontSize","setFontSize","fontFamily","setFontFamily","increaseFontSize","targetElements","document","querySelectorAll","forEach","element","style","decreaseFontSize","changeFontFamily","event","newFontFamily","target","value","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["C:/Users/aodha/OneDrive/Desktop/react-cw/cw4/src/components/fontSizeChanger/FontSizeChanger.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst FontChanger = ({ initialFontSize, targetSelector }) => {\r\n  const [fontSize, setFontSize] = useState(initialFontSize);\r\n  const [fontFamily, setFontFamily] = useState('sans-serif');\r\n\r\n  const increaseFontSize = () => {\r\n    const targetElements = document.querySelectorAll(targetSelector);\r\n    targetElements.forEach((element) => {\r\n      element.style.fontSize = `${fontSize + 2}px`;\r\n    });\r\n    setFontSize(fontSize + 2);\r\n  };\r\n\r\n  const decreaseFontSize = () => {\r\n    const targetElements = document.querySelectorAll(targetSelector);\r\n    targetElements.forEach((element) => {\r\n      element.style.fontSize = `${fontSize - 2}px`;\r\n    });\r\n    setFontSize(fontSize - 2);\r\n  };\r\n\r\n  const changeFontFamily = (event) => {\r\n    const newFontFamily = event.target.value;\r\n    const targetElements = document.querySelectorAll(targetSelector);\r\n    targetElements.forEach((element) => {\r\n      element.style.fontFamily = newFontFamily;\r\n    });\r\n    setFontFamily(newFontFamily);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button onClick={increaseFontSize}>+ Font Size</button>\r\n      <button onClick={decreaseFontSize}>- Font Size</button>\r\n      <select value={fontFamily} onChange={changeFontFamily}>\r\n        <option value=\"sans-serif\">Sans-serif</option>\r\n        <option value=\"serif\">Serif</option>\r\n        <option value=\"monospace\">Monospace</option>\r\n        <option value=\"cursive\">Cursive</option>\r\n        <option value=\"fantasy\">Fantasy</option>\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FontChanger;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,WAAW,GAAGC,IAAA,IAAyC;EAAAC,EAAA;EAAA,IAAxC;IAAEC,eAAe;IAAEC;EAAe,CAAC,GAAAH,IAAA;EACtD,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAACQ,eAAe,CAAC;EACzD,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,YAAY,CAAC;EAE1D,MAAMc,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,cAAc,GAAGC,QAAQ,CAACC,gBAAgB,CAACR,cAAc,CAAC;IAChEM,cAAc,CAACG,OAAO,CAAEC,OAAO,IAAK;MAClCA,OAAO,CAACC,KAAK,CAACV,QAAQ,GAAI,GAAEA,QAAQ,GAAG,CAAE,IAAG;IAC9C,CAAC,CAAC;IACFC,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMN,cAAc,GAAGC,QAAQ,CAACC,gBAAgB,CAACR,cAAc,CAAC;IAChEM,cAAc,CAACG,OAAO,CAAEC,OAAO,IAAK;MAClCA,OAAO,CAACC,KAAK,CAACV,QAAQ,GAAI,GAAEA,QAAQ,GAAG,CAAE,IAAG;IAC9C,CAAC,CAAC;IACFC,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMY,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACxC,MAAMX,cAAc,GAAGC,QAAQ,CAACC,gBAAgB,CAACR,cAAc,CAAC;IAChEM,cAAc,CAACG,OAAO,CAAEC,OAAO,IAAK;MAClCA,OAAO,CAACC,KAAK,CAACR,UAAU,GAAGY,aAAa;IAC1C,CAAC,CAAC;IACFX,aAAa,CAACW,aAAa,CAAC;EAC9B,CAAC;EAED,oBACEtB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACEzB,OAAA;MAAQ0B,OAAO,EAAEd,gBAAiB;MAAAa,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACvD9B,OAAA;MAAQ0B,OAAO,EAAEP,gBAAiB;MAAAM,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACvD9B,OAAA;MAAQwB,KAAK,EAAEd,UAAW;MAACqB,QAAQ,EAAEX,gBAAiB;MAAAK,QAAA,gBACpDzB,OAAA;QAAQwB,KAAK,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC9C9B,OAAA;QAAQwB,KAAK,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACpC9B,OAAA;QAAQwB,KAAK,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC5C9B,OAAA;QAAQwB,KAAK,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACxC9B,OAAA;QAAQwB,KAAK,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjC;EAAA,gBACR;AAEP,CAAC;AAACzB,EAAA,CA1CIF,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AA4CjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}