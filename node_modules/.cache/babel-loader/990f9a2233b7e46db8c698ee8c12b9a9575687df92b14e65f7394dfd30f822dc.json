{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { AuthContext } from '../../pages/auth/Auth';\nconst useIsAdmin = () => {\n  _s();\n  const {\n    loggedIn\n  } = useContext(AuthContext);\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    const fetchAdminStatus = async () => {\n      try {\n        const userId = await getUserId(loggedIn);\n        const isAdminUser = await checkAdmin(userId);\n        setIsAdmin(isAdminUser);\n      } catch (error) {\n        console.error('Error checking admin status:', error);\n      }\n    };\n    fetchAdminStatus();\n  }, [loggedIn]);\n  const getUserId = async username => {\n    try {\n      // Replace the URL with the endpoint that fetches the user ID based on the username\n      const response = await fetch(`http://your-api-endpoint/user/${username}`);\n      const data = await response.json();\n      if (data && data.userId) {\n        return data.userId;\n      }\n      return null;\n    } catch (error) {\n      console.error('Error fetching user ID:', error);\n      return null;\n    }\n  };\n  const checkAdmin = async userId => {\n    try {\n      // Replace the URL with the endpoint that checks if the user ID is part of the admin table\n      const response = await fetch(`http://your-api-endpoint/admin/${userId}`);\n      const data = await response.json();\n      if (data && data.isAdmin) {\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Error checking admin:', error);\n      return false;\n    }\n  };\n  return isAdmin;\n};\n_s(useIsAdmin, \"Rz2KxrTZCdMMyQseeVe4YPvJ8Zs=\");\nexport default useIsAdmin;","map":{"version":3,"names":["React","useContext","useState","useEffect","AuthContext","useIsAdmin","_s","loggedIn","isAdmin","setIsAdmin","fetchAdminStatus","userId","getUserId","isAdminUser","checkAdmin","error","console","username","response","fetch","data","json"],"sources":["C:/Users/aodha/OneDrive/Desktop/react-cw/cw4/src/components/isAdmin/isAdmin.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { AuthContext } from '../../pages/auth/Auth';\r\n\r\nconst useIsAdmin = () => {\r\n  const { loggedIn } = useContext(AuthContext);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchAdminStatus = async () => {\r\n      try {\r\n        const userId = await getUserId(loggedIn);\r\n        const isAdminUser = await checkAdmin(userId);\r\n        setIsAdmin(isAdminUser);\r\n      } catch (error) {\r\n        console.error('Error checking admin status:', error);\r\n      }\r\n    };\r\n\r\n    fetchAdminStatus();\r\n  }, [loggedIn]);\r\n\r\n  const getUserId = async (username) => {\r\n    try {\r\n      // Replace the URL with the endpoint that fetches the user ID based on the username\r\n      const response = await fetch(`http://your-api-endpoint/user/${username}`);\r\n      const data = await response.json();\r\n      if (data && data.userId) {\r\n        return data.userId;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error('Error fetching user ID:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const checkAdmin = async (userId) => {\r\n    try {\r\n      // Replace the URL with the endpoint that checks if the user ID is part of the admin table\r\n      const response = await fetch(`http://your-api-endpoint/admin/${userId}`);\r\n      const data = await response.json();\r\n      if (data && data.isAdmin) {\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error('Error checking admin:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return isAdmin;\r\n};\r\n\r\nexport default useIsAdmin;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,uBAAuB;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAS,CAAC,GAAGN,UAAU,CAACG,WAAW,CAAC;EAC5C,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMO,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACL,QAAQ,CAAC;QACxC,MAAMM,WAAW,GAAG,MAAMC,UAAU,CAACH,MAAM,CAAC;QAC5CF,UAAU,CAACI,WAAW,CAAC;MACzB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDL,gBAAgB,EAAE;EACpB,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,MAAMK,SAAS,GAAG,MAAOK,QAAQ,IAAK;IACpC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iCAAgCF,QAAS,EAAC,CAAC;MACzE,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClC,IAAID,IAAI,IAAIA,IAAI,CAACT,MAAM,EAAE;QACvB,OAAOS,IAAI,CAACT,MAAM;MACpB;MACA,OAAO,IAAI;IACb,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAMD,UAAU,GAAG,MAAOH,MAAM,IAAK;IACnC,IAAI;MACF;MACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAE,kCAAiCR,MAAO,EAAC,CAAC;MACxE,MAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClC,IAAID,IAAI,IAAIA,IAAI,CAACZ,OAAO,EAAE;QACxB,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,OAAO,KAAK;IACd;EACF,CAAC;EAED,OAAOP,OAAO;AAChB,CAAC;AAACF,EAAA,CAjDID,UAAU;AAmDhB,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}