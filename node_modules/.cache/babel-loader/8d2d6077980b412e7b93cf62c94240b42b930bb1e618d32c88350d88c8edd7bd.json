{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aodha\\\\OneDrive\\\\Desktop\\\\react-cw\\\\cw4\\\\src\\\\components\\\\qr\\\\QrScan.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from \"react\";\nimport { useZxing } from \"react-zxing\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QrScan = () => {\n  _s();\n  const [result, setResult] = useState(\"\");\n  const {\n    ref\n  } = useZxing({\n    onResult(result) {\n      setResult(result.getText());\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Last result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(QrScan, \"mHyl/HgmUqG7aFllZBIW7B6seQY=\", false, function () {\n  return [useZxing];\n});\n_c = QrScan;\nexport default QrScan;\nvar _c;\n$RefreshReg$(_c, \"QrScan\");","map":{"version":3,"names":["React","useState","useZxing","jsxDEV","_jsxDEV","Fragment","_Fragment","QrScan","_s","result","setResult","ref","onResult","getText","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aodha/OneDrive/Desktop/react-cw/cw4/src/components/qr/QrScan.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from \"react\";\r\nimport { useZxing } from \"react-zxing\";\r\n\r\nconst QrScan = () => {\r\n    const [result, setResult] = useState(\"\");\r\n    const { ref } = useZxing({\r\n      onResult(result) {\r\n        setResult(result.getText());\r\n      },\r\n    });\r\n  \r\n    return (\r\n      <>\r\n        <video ref={ref} />\r\n        <p>\r\n          <span>Last result:</span>\r\n          <span>{result}</span>\r\n        </p>\r\n      </>\r\n    );\r\n  }\r\n  \r\n\r\nexport default QrScan\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM;IAAEU;EAAI,CAAC,GAAGT,QAAQ,CAAC;IACvBU,QAAQA,CAACH,MAAM,EAAE;MACfC,SAAS,CAACD,MAAM,CAACI,OAAO,EAAE,CAAC;IAC7B;EACF,CAAC,CAAC;EAEF,oBACET,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACEV,OAAA;MAAOO,GAAG,EAAEA;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACnBd,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,EAAM;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eACzBd,OAAA;QAAAU,QAAA,EAAOL;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB;EAAA,gBACH;AAEP,CAAC;AAAAV,EAAA,CAjBGD,MAAM;EAAA,QAEQL,QAAQ;AAAA;AAAAiB,EAAA,GAFtBZ,MAAM;AAoBZ,eAAeA,MAAM;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}