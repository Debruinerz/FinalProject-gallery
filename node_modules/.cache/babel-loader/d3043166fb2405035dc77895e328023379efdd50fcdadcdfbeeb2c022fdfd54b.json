{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aodha\\\\OneDrive\\\\Desktop\\\\react-cw\\\\cw4\\\\src\\\\pages\\\\user\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../pages/auth/Auth';\nimport Footer from '../../components/footer/Footer';\nimport Header from '../../components/header/Header';\nimport { useDarkMode } from '../../pages/darkmode/DarkMode';\nimport CryptoJS from 'crypto-js';\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const secretPass = 'XkhZG4fW2t2W';\n  const [loginData, setLoginData] = useState({\n    username: '',\n    password: ''\n  });\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isnotverifited, setisnotverified] = useState(false);\n  const {\n    login\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (validateForm()) {\n      try {\n        //databse connection and encryptoin\n        const encryptedPassword = CryptoJS.AES.encrypt(loginData.password, secretPass).toString();\n        const requestData = {\n          username: loginData.username,\n          password: encryptedPassword\n        };\n        const response = await fetch('http://localhost:5000/api/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(requestData)\n        });\n        const responseData = await response.json();\n        if (responseData.success) {\n          console.log('Logged in:', loginData.username);\n          login(loginData.username);\n          setIsSubmitted(true);\n          setLoginData({\n            username: '',\n            password: ''\n          });\n          navigate('/');\n        } else {\n          console.log('Login failed:', responseData.message);\n          setisnotverified(true);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLoginData({\n      ...loginData,\n      [name]: value\n    });\n  };\n  const validateForm = () => {\n    const {\n      username,\n      password\n    } = loginData;\n    if (!username.trim() || !password.trim()) {\n      alert('Username and password are required');\n      return false;\n    }\n    return true;\n  };\n  const {\n    darkMode\n  } = useDarkMode();\n  const [PasswordData, setPasswordData] = useState({\n    username: '',\n    firstName: '',\n    email: '',\n    phoneNumber: '',\n    newPassword: ''\n  });\n  const [showPasswordForm, setShowPasswordForm] = useState(false);\n  const handlePasswordSubmit = async e => {\n    e.preventDefault();\n    if (validatePassword()) {\n      try {\n        const forgotData = {\n          username: PasswordData.username,\n          firstName: PasswordData.firstName,\n          email: PasswordData.email,\n          phoneNumber: PasswordData.phoneNumber,\n          newPassword: PasswordData.newPassword\n        };\n        const response = await fetch('http://localhost:5000/api/forgotpassword', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(forgotData)\n        });\n        const responseData = await response.json();\n        if (responseData.success) {\n          setShowPasswordForm(false);\n          setIsSubmitted(true);\n          setPasswordData({\n            username: '',\n            firstName: '',\n            email: '',\n            phoneNumber: '',\n            newPassword: ''\n          });\n        } else {\n          console.log('Password reset failed:', responseData.me);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  };\n  const handlePasswordChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPasswordData({\n      ...PasswordData,\n      [name]: value\n    });\n  };\n  const validatePassword = () => {\n    const {\n      username,\n      firstName,\n      email,\n      phoneNumber,\n      newPassword\n    } = PasswordData;\n    if (!username.trim() || !firstName.trim() || !email.trim() || !phoneNumber.trim() || !newPassword.trim()) {\n      alert('All fields are required');\n      return;\n    }\n    if (!email.includes('@')) {\n      alert('Invalid email format');\n      return;\n    }\n    if (!/^[A-Za-z]+$/.test(firstName)) {\n      alert('First name must contain only letters');\n      return;\n    }\n    if (!/^\\d{11}$/.test(phoneNumber)) {\n      alert('Invalid phone number format');\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `login ${darkMode ? 'dark-mode' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: loginData.username,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: loginData.password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }, this), isSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Login Successful\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You have successfully logged in.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsSubmitted(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 8\n      }, this), isnotverifited && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Login unSuccessful\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Either username or password iccorect \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setisnotverified(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 8\n      }, this), !showPasswordForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowPasswordForm(true),\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), showPasswordForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handlePasswordSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              value: PasswordData.username,\n              onChange: handlePasswordChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"firstName\",\n              children: \"First Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"firstName\",\n              value: PasswordData.firstName,\n              onChange: handlePasswordChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: PasswordData.email,\n              onChange: handlePasswordChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"phoneNumber\",\n              children: \"Phone Number:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              name: \"phoneNumber\",\n              pattern: \"[0-9]{11}\",\n              value: PasswordData.phoneNumber,\n              onChange: handlePasswordChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"newPassword\",\n              children: \"New Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"newPassword\",\n              value: PasswordData.newPassword,\n              onChange: handlePasswordChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"XewAveNZJfq4c91t2jkqg0kTgvA=\", false, function () {\n  return [useNavigate, useDarkMode];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","AuthContext","Footer","Header","useDarkMode","CryptoJS","jsxDEV","_jsxDEV","Login","_s","secretPass","loginData","setLoginData","username","password","isSubmitted","setIsSubmitted","isnotverifited","setisnotverified","login","navigate","handleSubmit","e","preventDefault","validateForm","encryptedPassword","AES","encrypt","toString","requestData","response","fetch","method","headers","body","JSON","stringify","responseData","json","success","console","log","message","error","handleChange","name","value","target","trim","alert","darkMode","PasswordData","setPasswordData","firstName","email","phoneNumber","newPassword","showPasswordForm","setShowPasswordForm","handlePasswordSubmit","validatePassword","forgotData","me","handlePasswordChange","includes","test","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","onChange","required","onClick","pattern","_c","$RefreshReg$"],"sources":["C:/Users/aodha/OneDrive/Desktop/react-cw/cw4/src/pages/user/Login.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../../pages/auth/Auth';\r\nimport Footer from '../../components/footer/Footer';\r\nimport Header from '../../components/header/Header';\r\nimport { useDarkMode } from '../../pages/darkmode/DarkMode';\r\nimport CryptoJS from 'crypto-js';\r\nimport './login.css';\r\n\r\nconst Login = () => {\r\nconst secretPass = 'XkhZG4fW2t2W';\r\n\r\n  const [loginData, setLoginData] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [isnotverifited, setisnotverified] = useState(false);\r\n\r\n  const { login } = useContext(AuthContext); \r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      try {\r\n\r\n        //databse connection and encryptoin\r\n        const encryptedPassword = CryptoJS.AES.encrypt(\r\n          loginData.password,\r\n          secretPass\r\n        ).toString();\r\n  \r\n        const requestData = {\r\n          username: loginData.username,\r\n          password: encryptedPassword,\r\n        };\r\n  \r\n        const response = await fetch('http://localhost:5000/api/login', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(requestData),\r\n        });\r\n\r\n          const responseData = await response.json();\r\n\r\n        if(responseData.success){\r\n          console.log('Logged in:', loginData.username);\r\n          login(loginData.username);\r\n          setIsSubmitted(true);\r\n          setLoginData({\r\n            username: '',\r\n            password: '',\r\n          });\r\n          navigate('/');\r\n        }else{\r\n          console.log('Login failed:', responseData.message);\r\n          setisnotverified(true);\r\n        }\r\n        \r\n        \r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setLoginData({ ...loginData, [name]: value });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const { username, password } = loginData;\r\n\r\n    if (!username.trim() || !password.trim()) {\r\n      alert('Username and password are required');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const { darkMode } = useDarkMode();\r\n\r\n\r\n\r\n\r\n  const [PasswordData, setPasswordData] = useState({\r\n    username: '',\r\n    firstName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    newPassword: '',\r\n  });\r\n  const [showPasswordForm, setShowPasswordForm] = useState(false);\r\n\r\n  const handlePasswordSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (validatePassword()) {\r\n      try {\r\n        const forgotData = {\r\n          username: PasswordData.username,\r\n          firstName: PasswordData.firstName,\r\n          email: PasswordData.email,\r\n          phoneNumber: PasswordData.phoneNumber,\r\n          newPassword: PasswordData.newPassword,\r\n        };\r\n        \r\n        const response = await fetch('http://localhost:5000/api/forgotpassword', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(forgotData),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        if (responseData.success) \r\n        {\r\n          setShowPasswordForm(false);\r\n          setIsSubmitted(true);\r\n          setPasswordData({\r\n            username: '',\r\n            firstName: '',\r\n            email: '',\r\n            phoneNumber: '',\r\n            newPassword: '',\r\n          });\r\n        } else {\r\n          console.log('Password reset failed:', responseData.me);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPasswordData({ ...PasswordData, [name]: value });\r\n  };\r\n\r\n  const validatePassword = () => {\r\n    const { username, firstName, email, phoneNumber, newPassword } = PasswordData;\r\n\r\n    if (!username.trim() || !firstName.trim() || !email.trim() || !phoneNumber.trim() || !newPassword.trim()) {\r\n      alert('All fields are required');\r\n      return;\r\n    }\r\n\r\n    if (!email.includes('@')) {\r\n      alert('Invalid email format');\r\n      return;\r\n    }\r\n\r\n    if (!/^[A-Za-z]+$/.test(firstName)) {\r\n      alert('First name must contain only letters');\r\n      return;\r\n    }\r\n\r\n    if (!/^\\d{11}$/.test(phoneNumber)) {\r\n      alert('Invalid phone number format');\r\n      return;\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header/>\r\n    <div className={`login ${darkMode ? 'dark-mode' : ''}`}>\r\n      <h1>Login</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"username\">Username:</label>\r\n          <input type=\"text\" name=\"username\" value={loginData.username} onChange={handleChange} required />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input type=\"password\" name=\"password\" value={loginData.password} onChange={handleChange} required />\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      {isSubmitted && (\r\n       <div>\r\n         <div >\r\n            <h3>Login Successful</h3>\r\n            <p>You have successfully logged in.</p>\r\n            <button onClick={() => setIsSubmitted(false)}>Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isnotverifited && (\r\n       <div>\r\n         <div >\r\n            <h3>Login unSuccessful</h3>\r\n            <p>Either username or password iccorect </p>\r\n            <button onClick={() => setisnotverified(false)}>Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      \r\n        {!showPasswordForm && (\r\n          <div>\r\n            <button onClick={() => setShowPasswordForm(true)}>Forgot Password?</button>\r\n          </div>\r\n        )}\r\n        {showPasswordForm && (\r\n          <div>\r\n            <h2>Forgot Password</h2>\r\n            <form onSubmit={handlePasswordSubmit}>\r\n              <div>\r\n                <label htmlFor=\"username\">Username:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  value={PasswordData.username}\r\n                  onChange={handlePasswordChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"firstName\">First Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  value={PasswordData.firstName}\r\n                  onChange={handlePasswordChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"email\">Email:</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={PasswordData.email}\r\n                  onChange={handlePasswordChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"phoneNumber\">Phone Number:</label>\r\n                <input\r\n                  type=\"tel\"\r\n                  name=\"phoneNumber\"\r\n                  pattern=\"[0-9]{11}\"\r\n                  value={PasswordData.phoneNumber}\r\n                  onChange={handlePasswordChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"newPassword\">New Password:</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"newPassword\"\r\n                  value={PasswordData.newPassword}\r\n                  onChange={handlePasswordChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <button type=\"submit\">Reset Password</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    <Footer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}