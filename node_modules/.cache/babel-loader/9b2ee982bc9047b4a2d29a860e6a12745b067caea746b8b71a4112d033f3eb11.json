{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aodha\\\\OneDrive\\\\Desktop\\\\react-cw\\\\cw4\\\\src\\\\pages\\\\contact\\\\Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from '../../components/header/Header';\nimport Navbar from '../../components/navbar/Navbar';\nimport Footer from '../../components/footer/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [contact, setContact] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    text: \"\",\n    phoneNumber: \"\"\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (validateForm()) {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/contact\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(contact)\n        });\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const result = await response.json();\n        console.log(\"New contact added:\", result);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setContact({\n      ...contact,\n      [name]: value\n    });\n  };\n  const validateForm = () => {\n    const {\n      firstName,\n      lastName,\n      email,\n      text,\n      phoneNumber\n    } = contact;\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const forbiddenCharsRegex = /[\"',`]/;\n    if (!firstName.trim() || !lastName.trim() || !email.trim() || !text.trim() || !phoneNumber.trim()) {\n      alert(\"All fields are required\");\n      return false;\n    }\n    if (!emailRegex.test(email)) {\n      alert(\"Invalid email format\");\n      return false;\n    }\n    if (firstName.length > 50 || lastName.length > 50) {\n      alert(\"First Name and Last Name cannot exceed 50 characters\");\n      return false;\n    }\n    if (text.length > 3000) {\n      alert(\"Message cannot exceed 3000 characters\");\n      return false;\n    }\n    if (phoneNumber.length !== 11) {\n      alert(\"Phone Number must be 11 digits\");\n      return false;\n    }\n    if (forbiddenCharsRegex.test(firstName) || forbiddenCharsRegex.test(lastName) || forbiddenCharsRegex.test(text)) {\n      alert(\"Invalid characters detected. Please remove any quotes (\\\", ', `)\");\n      return false;\n    }\n    return true;\n  };\n  const handleModalClose = () => {\n    setIsSubmitted(false);\n    setContact({\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      text: \"\",\n      phoneNumber: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), isSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Submission Successful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your form has been submitted successfully.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleModalClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"vS0j9SF9kv62c9q+uKWqt3o1lVg=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","Header","Navbar","Footer","jsxDEV","_jsxDEV","Contact","_s","contact","setContact","firstName","lastName","email","text","phoneNumber","handleSubmit","e","preventDefault","validateForm","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","console","log","error","handleChange","name","value","target","emailRegex","forbiddenCharsRegex","trim","alert","test","length","handleModalClose","setIsSubmitted","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","isSubmitted","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aodha/OneDrive/Desktop/react-cw/cw4/src/pages/contact/Contact.js"],"sourcesContent":["\r\n\r\nimport React, { useState } from 'react';\r\nimport Header from '../../components/header/Header';\r\nimport Navbar from '../../components/navbar/Navbar';\r\nimport Footer from '../../components/footer/Footer';\r\n\r\nconst Contact = () => {\r\n  const [contact, setContact] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    text: \"\",\r\n    phoneNumber: \"\"\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/contact\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(contact),\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        const result = await response.json();\r\n        console.log(\"New contact added:\", result);\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setContact({ ...contact, [name]: value });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const { firstName, lastName, email, text, phoneNumber } = contact;\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const forbiddenCharsRegex = /[\"',`]/;\r\n\r\n    if (!firstName.trim() || !lastName.trim() || !email.trim() || !text.trim() || !phoneNumber.trim()) {\r\n      alert(\"All fields are required\");\r\n      return false;\r\n    }\r\n    if (!emailRegex.test(email)) {\r\n      alert(\"Invalid email format\");\r\n      return false;\r\n    }\r\n    if (firstName.length > 50 || lastName.length > 50) {\r\n      alert(\"First Name and Last Name cannot exceed 50 characters\");\r\n      return false;\r\n    }\r\n    if (text.length > 3000) {\r\n      alert(\"Message cannot exceed 3000 characters\");\r\n      return false;\r\n    }\r\n    if (phoneNumber.length !== 11) {\r\n      alert(\"Phone Number must be 11 digits\");\r\n      return false;\r\n    }\r\n    if (forbiddenCharsRegex.test(firstName) || forbiddenCharsRegex.test(lastName) || forbiddenCharsRegex.test(text)) {\r\n      alert(\"Invalid characters detected. Please remove any quotes (\\\", ', `)\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setIsSubmitted(false);\r\n    setContact({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      text: \"\",\r\n      phoneNumber: \"\"\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Form fields go here */}\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      {isSubmitted && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h3>Submission Successful</h3>\r\n            <p>Your form has been submitted successfully.</p>\r\n            <button onClick={handleModalClose}>Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}