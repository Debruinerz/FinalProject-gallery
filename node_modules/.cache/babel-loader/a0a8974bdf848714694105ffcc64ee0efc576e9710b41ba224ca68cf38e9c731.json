{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aodha\\\\OneDrive\\\\Desktop\\\\react-cw\\\\cw4\\\\src\\\\pages\\\\user\\\\Signup.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import Footer from \"../../components/footer/Footer\";\n// import Header from \"../../components/header/Header\";\n// import Navbar from \"../../components/navbar/Navbar\";\n\n// const Signup = () => {\n//   const [imageName, setImageName] = useState('');\n\n//   const handleInputChange = (event) => {\n//     setImageName(event.target.value);\n//   };\n\n//   const getImagePath = () => {\n//     try {\n//       return require(`../../images/${imageName}.jpg`);\n//     } catch (error) {\n//       return null;\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Header />\n//       <Navbar />\n\n//       <div>\n//         <input type=\"text\" value={imageName} onChange={handleInputChange} />\n//         {imageName && <img src={getImagePath()} alt=\"User ex\" />}\n//       </div>\n\n//       <Footer />\n//     </div>\n//   );\n// };\n\n// export default Signup;\n\nimport React, { useState } from \"react\";\nimport Footer from \"../../components/footer/Footer\";\nimport Header from \"../../components/header/Header\";\nimport { useDarkMode } from \"../../pages/darkmode/DarkMode\";\nimport \"./signup.css\";\nimport CryptoJS from \"crypto-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst secretPass = \"XkhZG4fW2t2W\";\nconst Signup = () => {\n  _s();\n  const [signupData, setSignupData] = useState({\n    username: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    dobYear: \"\",\n    dobMonth: \"\",\n    dobDay: \"\",\n    phoneNumber: \"\"\n  });\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    try {\n      // Fetch encrypted user data from the server\n      const response = await fetch(\"http://localhost:5000/api/users\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Network not ok\");\n      }\n      const encryptedUsers = await response.json();\n\n      // check if entered username/phonenumber already exists\n      const decryptedUsernames = encryptedUsers.map(user => {\n        return CryptoJS.AES.decrypt(user.Username, secretPass).toString(CryptoJS.enc.Utf8);\n      });\n      if (decryptedUsernames.includes(signupData.username)) {\n        alert(\"Username already exists\");\n        return;\n      }\n      const decryptedPhoneNumbers = encryptedUsers.map(user => {\n        return CryptoJS.AES.decrypt(user.PhoneNumber, secretPass).toString(CryptoJS.enc.Utf8);\n      });\n      if (decryptedPhoneNumbers.includes(signupData.phoneNumber)) {\n        alert(\"Phone number already exists\");\n        return;\n      }\n      const dob = `${signupData.dobYear}-${signupData.dobMonth.padStart(2, \"0\")}-${signupData.dobDay.padStart(2, \"0\")}`;\n      const dobvalid = new Date(parseInt(signupData.dobYear, 10), parseInt(signupData.dobMonth, 10) - 1, parseInt(signupData.dobDay, 10));\n      const currentDate = new Date();\n      const minDate = new Date(1901, 0, 1);\n      if (dob < minDate || dobvalid > currentDate) {\n        alert(\"Invalid date of birth. Please enter a valid date.\");\n        return;\n      }\n      const encryptedUserData = {\n        username: CryptoJS.AES.encrypt(signupData.username, secretPass).toString(),\n        password: CryptoJS.AES.encrypt(signupData.password, secretPass).toString(),\n        firstName: CryptoJS.AES.encrypt(signupData.firstName, secretPass).toString(),\n        lastName: CryptoJS.AES.encrypt(signupData.lastName, secretPass).toString(),\n        email: CryptoJS.AES.encrypt(signupData.email, secretPass).toString(),\n        phoneNumber: CryptoJS.AES.encrypt(signupData.phoneNumber, secretPass).toString()\n      };\n      const encryptedDob = CryptoJS.AES.encrypt(dob, secretPass).toString();\n      const res = await fetch(\"http://localhost:5000/api/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...signupData,\n          dob\n        })\n      });\n      if (!res.ok) {\n        throw new Error(\"Network not ok\");\n      }\n      const result = await res.json();\n      console.log(\"New user:\", result);\n      setIsSubmitted(true);\n      setSignupData({\n        username: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        dobYear: \"\",\n        dobMonth: \"\",\n        dobDay: \"\",\n        phoneNumber: \"\"\n      });\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSignupData({\n      ...signupData,\n      [name]: value\n    });\n  };\n  const validateForm = () => {\n    const {\n      username,\n      password,\n      firstName,\n      lastName,\n      email,\n      dobYear,\n      dobMonth,\n      dobDay,\n      phoneNumber\n    } = signupData;\n    const emailReg = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const forbiddenChara = /[\"',`]/;\n    const yearReg = /^\\d{4}$/;\n    const monthReg = /^(0?[1-9]|1[0-2])$/;\n    const dayReg = /^(0?[1-9]|1[0-9]|2[0-9]|3[0-1])$/;\n    const maxlength = 50;\n    if (!username.trim() || !password.trim() || !firstName.trim() || !lastName.trim() || !email.trim() || !dobYear.trim() || !dobMonth.trim() || !dobDay.trim() || !phoneNumber.trim()) {\n      alert(\"All fields are required\");\n      return false;\n    }\n    if (!emailReg.test(email)) {\n      alert(\"Invalid email format\");\n      return false;\n    }\n    if (forbiddenChara.test(username)) {\n      alert(\"Username cannot contain quotes or backticks\");\n      return false;\n    }\n    if (!yearReg.test(dobYear)) {\n      alert(\"Invalid year format. Please use yyyy\");\n      return false;\n    }\n    if (!monthReg.test(dobMonth)) {\n      alert(\"Invalid month format. Please use mm\");\n      return false;\n    }\n    if (!dayReg.test(dobDay)) {\n      alert(\"Invalid day format. Please use dd\");\n      return false;\n    }\n    if (!username.trim() || username.length > maxlength || !password.trim() || password.length > maxlength || !firstName.trim() || firstName.length > maxlength || !lastName.trim() || lastName.length > maxlength || !email.trim() || email.length > maxlength || !dobYear.trim() || dobYear.length !== 4 || !dobMonth.trim() || dobMonth.length > 2 || !dobDay.trim() || dobDay.length > 2 || !phoneNumber.trim() || phoneNumber.length > 11) {\n      alert(\"Invalid input or field length exceeded\");\n      return false;\n    }\n    const dob = `${dobYear}-${dobMonth.padStart(2, \"0\")}-${dobDay.padStart(2, \"0\")}`;\n    setSignupData({\n      ...signupData,\n      dob\n    });\n    return true;\n  };\n  const handleModalClose = () => {\n    setIsSubmitted(false);\n  };\n  const {\n    darkMode\n  } = useDarkMode();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `signup ${darkMode ? \"dark-mode\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: signupData.username,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: signupData.password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"First Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"firstName\",\n            value: signupData.firstName,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            children: \"Last Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lastName\",\n            value: signupData.lastName,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: signupData.email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" DOB :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dobYear\",\n            children: \"Year (yyyy):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"dobYear\",\n            value: signupData.dobYear,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dobMonth\",\n            children: \"Month (mm):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"dobMonth\",\n            value: signupData.dobMonth,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dobDay\",\n            children: \"Day (dd):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"dobDay\",\n            value: signupData.dobDay,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phoneNumber\",\n            children: \"Phone Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            name: \"phoneNumber\",\n            pattern: \"[0-9]{11}\",\n            value: signupData.phoneNumber,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"(Enter 11-digit phone number without spaces or dashes)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), isSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Registration Successful\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You have successfully registered.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleModalClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"tOV70F+52jjgZ+gMr2K6FNseCbA=\", false, function () {\n  return [useDarkMode];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","Footer","Header","useDarkMode","CryptoJS","jsxDEV","_jsxDEV","secretPass","Signup","_s","signupData","setSignupData","username","password","firstName","lastName","email","dobYear","dobMonth","dobDay","phoneNumber","isSubmitted","setIsSubmitted","handleSubmit","e","preventDefault","validateForm","response","fetch","method","headers","ok","Error","encryptedUsers","json","decryptedUsernames","map","user","AES","decrypt","Username","toString","enc","Utf8","includes","alert","decryptedPhoneNumbers","PhoneNumber","dob","padStart","dobvalid","Date","parseInt","currentDate","minDate","encryptedUserData","encrypt","encryptedDob","res","body","JSON","stringify","result","console","log","error","handleChange","name","value","target","emailReg","forbiddenChara","yearReg","monthReg","dayReg","maxlength","trim","test","length","handleModalClose","darkMode","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","onChange","required","pattern","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aodha/OneDrive/Desktop/react-cw/cw4/src/pages/user/Signup.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import Footer from \"../../components/footer/Footer\";\r\n// import Header from \"../../components/header/Header\";\r\n// import Navbar from \"../../components/navbar/Navbar\";\r\n\r\n// const Signup = () => {\r\n//   const [imageName, setImageName] = useState('');\r\n\r\n//   const handleInputChange = (event) => {\r\n//     setImageName(event.target.value);\r\n//   };\r\n\r\n//   const getImagePath = () => {\r\n//     try {\r\n//       return require(`../../images/${imageName}.jpg`);\r\n//     } catch (error) {\r\n//       return null;\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Header />\r\n//       <Navbar />\r\n\r\n//       <div>\r\n//         <input type=\"text\" value={imageName} onChange={handleInputChange} />\r\n//         {imageName && <img src={getImagePath()} alt=\"User ex\" />}\r\n//       </div>\r\n\r\n//       <Footer />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Signup;\r\n\r\nimport React, { useState } from \"react\";\r\nimport Footer from \"../../components/footer/Footer\";\r\nimport Header from \"../../components/header/Header\";\r\nimport { useDarkMode } from \"../../pages/darkmode/DarkMode\";\r\nimport \"./signup.css\";\r\nimport CryptoJS from \"crypto-js\";\r\nconst secretPass = \"XkhZG4fW2t2W\";\r\n\r\nconst Signup = () => {\r\n  const [signupData, setSignupData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    dobYear: \"\",\r\n    dobMonth: \"\",\r\n    dobDay: \"\",\r\n    phoneNumber: \"\",\r\n  });\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Fetch encrypted user data from the server\r\n      const response = await fetch(\"http://localhost:5000/api/users\", {\r\n        method: \"GET\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Network not ok\");\r\n      }\r\n\r\n      const encryptedUsers = await response.json();\r\n\r\n      // check if entered username/phonenumber already exists\r\n      const decryptedUsernames = encryptedUsers.map((user) => {\r\n        return CryptoJS.AES.decrypt(user.Username, secretPass).toString(\r\n          CryptoJS.enc.Utf8\r\n        );\r\n      });\r\n\r\n      if (decryptedUsernames.includes(signupData.username)) {\r\n        alert(\"Username already exists\");\r\n        return;\r\n      }\r\n\r\n      const decryptedPhoneNumbers = encryptedUsers.map((user) => {\r\n        return CryptoJS.AES.decrypt(user.PhoneNumber, secretPass).toString(\r\n          CryptoJS.enc.Utf8\r\n        );\r\n      });\r\n\r\n      if (decryptedPhoneNumbers.includes(signupData.phoneNumber)) {\r\n        alert(\"Phone number already exists\");\r\n        return;\r\n      }\r\n\r\n\r\n      const dob = `${signupData.dobYear}-${signupData.dobMonth.padStart(\r\n        2,\"0\")}-${signupData.dobDay.padStart(2, \"0\")}`;\r\n\r\n      const dobvalid = new Date(\r\n        parseInt(signupData.dobYear, 10),\r\n        parseInt(signupData.dobMonth, 10) - 1,\r\n        parseInt(signupData.dobDay, 10)\r\n      );\r\n  \r\n      const currentDate = new Date();\r\n      const minDate = new Date(1901, 0, 1); \r\n      if (dob < minDate || dobvalid > currentDate) {\r\n        alert(\"Invalid date of birth. Please enter a valid date.\");\r\n        return;\r\n      }\r\n\r\n      const encryptedUserData = {\r\n        username: CryptoJS.AES.encrypt(signupData.username, secretPass).toString(),\r\n        password: CryptoJS.AES.encrypt(signupData.password, secretPass).toString(),\r\n        firstName: CryptoJS.AES.encrypt(signupData.firstName, secretPass).toString(),\r\n        lastName: CryptoJS.AES.encrypt(signupData.lastName, secretPass).toString(),\r\n        email: CryptoJS.AES.encrypt(signupData.email, secretPass).toString(),\r\n        phoneNumber: CryptoJS.AES.encrypt(signupData.phoneNumber, secretPass).toString(),\r\n      };\r\n\r\n      const encryptedDob = CryptoJS.AES.encrypt(dob, secretPass).toString();\r\n      \r\n      const res = await fetch(\"http://localhost:5000/api/users\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ ...signupData, dob }),\r\n        }\r\n      );\r\n\r\n      if (!res.ok) {\r\n        throw new Error(\"Network not ok\");\r\n      }\r\n\r\n      const result = await res.json();\r\n      console.log(\"New user:\", result);\r\n      setIsSubmitted(true);\r\n      setSignupData({\r\n        username: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        dobYear: \"\",\r\n        dobMonth: \"\",\r\n        dobDay: \"\",\r\n        phoneNumber: \"\",\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSignupData({ ...signupData, [name]: value });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const {\r\n      username,\r\n      password,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      dobYear,\r\n      dobMonth,\r\n      dobDay,\r\n      phoneNumber,\r\n    } = signupData;\r\n    const emailReg = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const forbiddenChara = /[\"',`]/;\r\n    const yearReg = /^\\d{4}$/;\r\n    const monthReg = /^(0?[1-9]|1[0-2])$/;\r\n    const dayReg = /^(0?[1-9]|1[0-9]|2[0-9]|3[0-1])$/;\r\n    const maxlength = 50;\r\n\r\n    if (\r\n      !username.trim() ||\r\n      !password.trim() ||\r\n      !firstName.trim() ||\r\n      !lastName.trim() ||\r\n      !email.trim() ||\r\n      !dobYear.trim() ||\r\n      !dobMonth.trim() ||\r\n      !dobDay.trim() ||\r\n      !phoneNumber.trim()\r\n    ) {\r\n      alert(\"All fields are required\");\r\n      return false;\r\n    }\r\n\r\n    if (!emailReg.test(email)) {\r\n      alert(\"Invalid email format\");\r\n      return false;\r\n    }\r\n\r\n    if (forbiddenChara.test(username)) {\r\n      alert(\"Username cannot contain quotes or backticks\");\r\n      return false;\r\n    }\r\n\r\n    if (!yearReg.test(dobYear)) {\r\n      alert(\"Invalid year format. Please use yyyy\");\r\n      return false;\r\n    }\r\n\r\n    if (!monthReg.test(dobMonth)) {\r\n      alert(\"Invalid month format. Please use mm\");\r\n      return false;\r\n    }\r\n\r\n    if (!dayReg.test(dobDay)) {\r\n      alert(\"Invalid day format. Please use dd\");\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      !username.trim() ||\r\n      username.length > maxlength ||\r\n      !password.trim() ||\r\n      password.length > maxlength ||\r\n      !firstName.trim() ||\r\n      firstName.length > maxlength ||\r\n      !lastName.trim() ||\r\n      lastName.length > maxlength ||\r\n      !email.trim() ||\r\n      email.length > maxlength ||\r\n      !dobYear.trim() ||\r\n      dobYear.length !== 4 ||\r\n      !dobMonth.trim() ||\r\n      dobMonth.length > 2 ||\r\n      !dobDay.trim() ||\r\n      dobDay.length > 2 ||\r\n      !phoneNumber.trim() ||\r\n      phoneNumber.length > 11\r\n    ) {\r\n      alert(\"Invalid input or field length exceeded\");\r\n      return false;\r\n    }\r\n\r\n    const dob = `${dobYear}-${dobMonth.padStart(2, \"0\")}-${dobDay.padStart(\r\n      2,\r\n      \"0\"\r\n    )}`;\r\n    setSignupData({ ...signupData, dob });\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setIsSubmitted(false);\r\n  };\r\n\r\n  const { darkMode } = useDarkMode();\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className={`signup ${darkMode ? \"dark-mode\" : \"\"}`}>\r\n        <h1>Sign Up</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"username\">Username:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              value={signupData.username}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={signupData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"firstName\">First Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={signupData.firstName}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"lastName\">Last Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={signupData.lastName}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={signupData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <br />\r\n          <div> DOB :</div>\r\n          <div>\r\n            <label htmlFor=\"dobYear\">Year (yyyy):</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"dobYear\"\r\n              value={signupData.dobYear}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"dobMonth\">Month (mm):</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"dobMonth\"\r\n              value={signupData.dobMonth}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"dobDay\">Day (dd):</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"dobDay\"\r\n              value={signupData.dobDay}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <label htmlFor=\"phoneNumber\">Phone Number:</label>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"phoneNumber\"\r\n              pattern=\"[0-9]{11}\"\r\n              value={signupData.phoneNumber}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <small>\r\n              (Enter 11-digit phone number without spaces or dashes)\r\n            </small>\r\n          </div>\r\n          <button type=\"submit\">Register</button>\r\n        </form>\r\n        {isSubmitted && (\r\n          <div className=\"modal\">\r\n            <div className=\"modal-content\">\r\n              <h3>Registration Successful</h3>\r\n              <p>You have successfully registered.</p>\r\n              <button onClick={handleModalClose}>Close</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}