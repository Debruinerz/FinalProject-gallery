{"ast":null,"code":"const CryptoJS = require('crypto-js');\nconst ENCRYPTION_KEY = 'thisIsMySecretPassphrase'; // Use the same passphrase as on the server\n\nconst decrypt = encryptedData => {\n  try {\n    const decryptedData = CryptoJS.AES.decrypt(encryptedData, ENCRYPTION_KEY).toString(CryptoJS.enc.Utf8);\n    return decryptedData;\n  } catch (error) {\n    console.error('Error decrypting data:', error);\n    return null;\n  }\n};\nexport default decrypt;","map":{"version":3,"names":["CryptoJS","require","ENCRYPTION_KEY","decrypt","encryptedData","decryptedData","AES","toString","enc","Utf8","error","console"],"sources":["C:/Users/aodha/OneDrive/Desktop/react-cw/cw4/src/components/crypto-browser/decrypt.js"],"sourcesContent":["const CryptoJS = require('crypto-js');\r\n\r\nconst ENCRYPTION_KEY = 'thisIsMySecretPassphrase'; // Use the same passphrase as on the server\r\n\r\nconst decrypt = (encryptedData) => {\r\n  try {\r\n    const decryptedData = CryptoJS.AES.decrypt(encryptedData, ENCRYPTION_KEY).toString(CryptoJS.enc.Utf8);\r\n    return decryptedData;\r\n  } catch (error) {\r\n    console.error('Error decrypting data:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default decrypt;"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;AAErC,MAAMC,cAAc,GAAG,0BAA0B,CAAC,CAAC;;AAEnD,MAAMC,OAAO,GAAIC,aAAa,IAAK;EACjC,IAAI;IACF,MAAMC,aAAa,GAAGL,QAAQ,CAACM,GAAG,CAACH,OAAO,CAACC,aAAa,EAAEF,cAAc,CAAC,CAACK,QAAQ,CAACP,QAAQ,CAACQ,GAAG,CAACC,IAAI,CAAC;IACrG,OAAOJ,aAAa;EACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,IAAI;EACb;AACF,CAAC;AAED,eAAeP,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}