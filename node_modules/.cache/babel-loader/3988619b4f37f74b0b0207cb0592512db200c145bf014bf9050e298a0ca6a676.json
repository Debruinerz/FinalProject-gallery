{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aodha\\\\OneDrive\\\\Desktop\\\\react-cw\\\\cw4\\\\src\\\\pages\\\\dynamic\\\\DataContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from '../../components/header/Header';\nimport Footer from '../../components/footer/Footer';\nimport FontSizeChanger from '../../components/fontSizeChanger/FontSizeChanger';\nimport TextToSpeech from '../../components/textToSpeech/TextToSpeech';\nimport './datacontent.css';\nimport { useDarkMode } from '../../pages/darkmode/DarkMode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContent = () => {\n  _s();\n  const {\n    title\n  } = useParams();\n  const [content, setContent] = useState(null);\n  const [TtSVisible, setTtSVisible] = useState(false);\n  const [well, setWell] = useState('');\n  const targetId = 'targetId';\n  const {\n    darkMode\n  } = useDarkMode();\n  useEffect(() => {\n    const fetchContent = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/content/${title}`);\n        const data = await response.json();\n        setContent(data);\n      } catch (error) {\n        console.log('Error fetching content data', error);\n      }\n    };\n    fetchContent();\n  }, [title]);\n  useEffect(() => {\n    const targetElement = document.getElementById(targetId);\n    if (targetElement) {\n      setWell(targetElement.innerText);\n    }\n  }, [targetId]);\n  useEffect(() => {\n    var _document$getElementB;\n    setWell(((_document$getElementB = document.getElementById(targetId)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.innerText) || '');\n  }, [content]);\n  const getImagePath = () => {\n    const imagePath = content ? require(`../../images/${content.imgRef}.jpg`) : null;\n    return imagePath;\n  };\n  if (content === null) {\n    console.log('Fetching content for title:', title);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Error,\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), \" There is no imformation availabe based on the title presented, please try again\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n  const ToggleTextToSpeech = () => {\n    setTtSVisible(!TtSVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `box ${darkMode ? 'dark-mode' : ''} `,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sizeChanger\",\n        children: /*#__PURE__*/_jsxDEV(FontSizeChanger, {\n          initialFontSize: 16,\n          targetSelector: \".box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Title: \", content.Title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: getImagePath(),\n          alt: content.imgAlt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: targetId,\n          children: content.textContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-to-speech\",\n          children: [TtSVisible && /*#__PURE__*/_jsxDEV(TextToSpeech, {\n            text: well\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: ToggleTextToSpeech,\n            children: [TtSVisible ? 'Hide' : 'Show', \" Text to Speech (main text content)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(DataContent, \"SIdyC6Aqky6zFBKFjJw1VdB+92w=\", false, function () {\n  return [useParams, useDarkMode];\n});\n_c = DataContent;\nexport default DataContent;\n\n/* import React, { useState } from 'react';\r\nimport Footer from \"../../components/footer/Footer\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\n\r\nconst Signup = () => {\r\n  const [imageName, setImageName] = useState('');\r\n\r\n  const handleInputChange = (event) => {\r\n    setImageName(event.target.value);\r\n  };\r\n\r\n  const getImagePath = () => {\r\n    try {\r\n      return require(`../../images/${imageName}.jpg`);\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Navbar />\r\n      \r\n      <div>\r\n        <input type=\"text\" value={imageName} onChange={handleInputChange} />\r\n        {imageName && <img src={getImagePath()} alt=\"User ex\" />}\r\n      </div>\r\n\r\n      \r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n\r\n \r\n*/\nvar _c;\n$RefreshReg$(_c, \"DataContent\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Header","Footer","FontSizeChanger","TextToSpeech","useDarkMode","jsxDEV","_jsxDEV","DataContent","_s","title","content","setContent","TtSVisible","setTtSVisible","well","setWell","targetId","darkMode","fetchContent","response","fetch","data","json","error","console","log","targetElement","document","getElementById","innerText","_document$getElementB","getImagePath","imagePath","require","imgRef","children","fileName","_jsxFileName","lineNumber","columnNumber","ToggleTextToSpeech","className","initialFontSize","targetSelector","Title","src","alt","imgAlt","id","textContent","text","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aodha/OneDrive/Desktop/react-cw/cw4/src/pages/dynamic/DataContent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Header from '../../components/header/Header';\r\nimport Footer from '../../components/footer/Footer';\r\nimport FontSizeChanger from '../../components/fontSizeChanger/FontSizeChanger';\r\nimport TextToSpeech from '../../components/textToSpeech/TextToSpeech';\r\nimport './datacontent.css';\r\nimport { useDarkMode } from '../../pages/darkmode/DarkMode';\r\n\r\nconst DataContent = () => {\r\n  const { title } = useParams();\r\n  const [content, setContent] = useState(null);\r\n  const [TtSVisible, setTtSVisible] = useState(false);\r\n  const [well, setWell] = useState('');\r\n  const targetId = 'targetId';\r\n  const { darkMode } = useDarkMode();\r\n\r\n  useEffect(() => {\r\n    const fetchContent = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/content/${title}`);\r\n        const data = await response.json();\r\n        setContent(data);\r\n      } catch (error) {\r\n        console.log('Error fetching content data', error);\r\n      }\r\n    };\r\n\r\n    fetchContent();\r\n  }, [title]);\r\n\r\n  useEffect(() => {\r\n    const targetElement = document.getElementById(targetId);\r\n    if (targetElement) {\r\n      setWell(targetElement.innerText);\r\n    }\r\n  }, [targetId]);\r\n\r\n  useEffect(() => {\r\n    setWell(document.getElementById(targetId)?.innerText || '');\r\n  }, [content]);\r\n\r\n  const getImagePath = () => {\r\n    const imagePath = content ? require(`../../images/${content.imgRef}.jpg`) : null;\r\n    return imagePath;\r\n  };\r\n\r\n  if (content === null) {\r\n    console.log('Fetching content for title:', title);\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div> <h1>Error,</h1> There is no imformation availabe based on the title presented, please try again</div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const ToggleTextToSpeech = () => {\r\n    setTtSVisible(!TtSVisible);\r\n  };\r\n\r\n \r\n  return (\r\n    <div >\r\n      <Header />\r\n      <div className={`box ${darkMode ? 'dark-mode' : ''} `}> \r\n      <div className=\"sizeChanger\">\r\n            <FontSizeChanger initialFontSize={16} targetSelector=\".box\" />\r\n      </div>\r\n      <div className=\"content\">\r\n        <p>Title: {content.Title}</p>\r\n        <img src={getImagePath()} alt={content.imgAlt} />\r\n        <p id={targetId}>{content.textContent}</p>\r\n        <div className=\"text-to-speech\">\r\n          {TtSVisible && <TextToSpeech text={well} />}\r\n          <button onClick={ToggleTextToSpeech}>\r\n            {TtSVisible ? 'Hide' : 'Show'} Text to Speech (main text content)\r\n          </button>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataContent;\r\n\r\n/* import React, { useState } from 'react';\r\nimport Footer from \"../../components/footer/Footer\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\n\r\nconst Signup = () => {\r\n  const [imageName, setImageName] = useState('');\r\n\r\n  const handleInputChange = (event) => {\r\n    setImageName(event.target.value);\r\n  };\r\n\r\n  const getImagePath = () => {\r\n    try {\r\n      return require(`../../images/${imageName}.jpg`);\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Navbar />\r\n      \r\n      <div>\r\n        <input type=\"text\" value={imageName} onChange={handleInputChange} />\r\n        {imageName && <img src={getImagePath()} alt=\"User ex\" />}\r\n      </div>\r\n\r\n      \r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n\r\n \r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}